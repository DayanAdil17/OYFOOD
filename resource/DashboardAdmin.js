import React, {useState} from 'react';
import { StatusBar } from 'expo-status-bar';
import { View, ScrollView, StyleSheet, Platform} from 'react-native';
import { Text, Card, Button, Icon, Header as HeaderRNE, HeaderProps, Image, Divider,ListItem,Avatar, Dialog } from 'react-native-elements';
import TouchableScale from 'react-native-touchable-scale';
import { LinearGradient } from 'expo-linear-gradient';
import * as Print from 'expo-print';
import { shareAsync } from 'expo-sharing';

const styles = StyleSheet.create({
    containerLayout: {
        flex: 1,
        backgroundColor: '#fff',
        alignItems: 'center',
        justifyContent: 'flex-start',
      },
    container: {
      flex: 1,
      justifyContent: 'center',
      backgroundColor: '#ecf0f1',
      flexDirection: 'column',
      padding: 8,
    },
    spacer: {
      height: 8
    },
    printer: {
      textAlign: 'center',
    }
});
  
export default function DashboardAdmin(props) {
    const { ActiveOrderPage, HistoryPage, dashboardPage, MenuManagementPage }  = React.useContext(props.AuthContext);
    const ip_address = props.connection;
    const [selectedPrinter, setSelectedPrinter] = React.useState();
    const [openDialog, setOpenDialog] = React.useState(false) 
    const months = ["January","February","March","April","May","Juni","July","August","September","October","November","December"]
    const [order_history, set_order_history] = React.useState([])
    const [menuList, setMenuList] = React.useState([])

    React.useEffect(() => {            
        
        fetch(ip_address+"OYFOOD/back-end/order_history.php", {
            method:'POST',
            headers:{
                Accept: 'application/json',
                'Content-Type': 'application/json',
            },
         
        }).then((response) => response.json()).then((responseJson) => {
            set_order_history(responseJson.order_history)
            setMenuList(responseJson.menu)
        });

    }, []);

    const printToFile = async () => {
        // On iOS/android prints the given html. On web prints the HTML from the current page.
        // let today_date = new Date("2022-05-05");
        let today_date = new Date(); 

        let this_year = today_date.getFullYear().toString();
        let this_month = today_date.getMonth();
        let this_date = today_date.getDate().toString();
        let this_hour = today_date.getHours().toString();
        let this_minute = today_date.getMinutes().toString();

        if(this_date.length == 1){
            this_date = "0" + today_date.getDate().toString();
        }

        let full_date = this_date + " " + months[this_month] + " " + this_year + ", at " + this_hour + ":" + this_minute;

        let html = `
            <html>
                <head>
                    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no" />
                    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
                </head>
                <body style="text-align: center;">
                    <h1 style="font-size: 30px; font-family: Helvetica Neue; font-weight: normal;margin-top: 5vh;">
                        OYFOOD Daily Report
                    </h1>
                    <p style="font-size: 20;">`+ full_date +`</p>
                    <p style="font-size: 20;"> Generated by: Admin`+ `` +`</p>
                    <hr  style="width:60%;margin: auto;"/>
                    <table class="table" style="width:60%;margin: auto;margin-top: 6vh;">
                        <thead>
                            <tr>
                                <th scope="col">No</th>
                                <th scope="col">Menu</th>
                                <th scope="col" style="text-align:center;">Total Order</th>
                                <th scope="col" style="text-align:right;">Amount</th>
                            </tr>
                        </thead>
                        <tbody>
        `;
                            // today_date = new Date("2022-05-05"); 
                            today_date = new Date(); 

                            today_date.setDate(today_date.getDate());

                            this_year = today_date.getFullYear().toString();
                            this_month = today_date.getMonth() + 1;
                            this_date = today_date.getDate().toString();

                            if(this_month.toString().length == 1){
                                this_month = "0" + (today_date.getMonth() + 1);
                            }
                            if(this_date.length == 1){
                                this_date = "0" + today_date.getDate().toString();
                            }

                            full_date = this_year + "-" + this_month.toString() + "-" + this_date;

                            let total = 0;

                            let all_menu = menuList.sort(function(a, b){
                                if(a.menu_name < b.menu_name) { return -1; }
                                if(a.menu_name > b.menu_name) { return 1; }
                                return 0;
                            })
                            
                            all_menu.map((val,key)=>{
                                let name = val.menu_name;
                                let quantity = 0;
                                order_history.map((data) => {
                                    let data_date = data.order_created.toString().slice(0,10);
                                    if(full_date == data_date){
                                        let id = data.order_menu_id.split(',')
                                        let total = data.order_quantity.split(',')
                                        for (let index = 0; index < id.length; index++) {
                                            const element = id[index];
                                            if(parseInt(element)==val.menu_id){
                                                quantity += parseInt(total[index])
                                            }
                                        }
                                    }
                                })
                                let amount = quantity * val.menu_price;
                                total += amount;
                                html += `
                                    <tr>
                                        <th scope="row">`+ (key+1) +`</th>
                                        <td>`+ name +`</td>
                                        <td style="text-align:center;">`+ quantity +`</td>
                                        <td style="text-align:right;">`+ amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") +`</td>
                                    </tr>
                                `
                            })
        
        html += `
                                <tr>
                                    <td colspan="3" style="text-align:center;font-weight: bold;">TOTAL</td>
                                    <td style="text-align:right;">`+ total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",") +`</td>
                                </tr>
                            </tbody>
                        </table>
                    </body>
            </html>
        `
                            
                            
        
        const { uri } = await Print.printToFileAsync({ html });
        await shareAsync(uri, { UTI: '.pdf', mimeType: 'application/pdf' });
    }


    return (
        <View style={styles.containerLayout}>         
            <Image style = {{width : 300, height : 200}} source = { require('../assets/logo.png' ) } />  
            <Text style={{color:"#D1D1D1"}}>-------------------------------------------------------------------------</Text>
            <View style = {{justifyContent:"center", alignItems:'center',width:"100%",marginTop:"10%"}}>
                {/* <ListItem
                    key                 = "Menu Management"
                    Component           = { TouchableScale }
                    ViewComponent       = { LinearGradient }
                    friction            = { 90 }
                    tension             = { 100 }
                    activeScale         = { 0.95 }
                    style               = { { margin:16,marginTop:0,width:"90%" } }
                    containerStyle      = {{borderRadius:5}}
                    onPress             = { MenuManagementPage }
                    linearGradientProps = {{
                        colors : ['#cf29f0', '#9c1fb5'],
                        start  : { x: 1, y: 0 },
                        end    : { x: 0.2, y: 0 },
                    }}                        
                >
                    <Avatar source = { require('../assets/list.png' ) } />
                    <ListItem.Content>
                        <ListItem.Title style={{ color: 'white', fontWeight: 'bold' }}>
                        Menu Management
                        </ListItem.Title>
                    </ListItem.Content>
                    <ListItem.Chevron color="white" size = {40} onPress = { MenuManagementPage }/>
                </ListItem> */}
                <ListItem
                    key                 = "Customer Order List"
                    Component           = { TouchableScale }
                    ViewComponent       = { LinearGradient }
                    friction            = { 90 }
                    tension             = { 100 }
                    activeScale         = { 0.95 }
                    style               = { { margin:16,marginTop:0,width:"90%" } }
                    containerStyle      = {{borderRadius:5}}
                    onPress             = { ActiveOrderPage }
                    linearGradientProps = {{
                        colors : ['#F2B545', '#EB9A03'],
                        start  : { x: 1, y: 0 },
                        end    : { x: 0.2, y: 0 },
                    }}                        
                >
                    <Avatar source = { require('../assets/list.png' ) } />
                    <ListItem.Content>
                        <ListItem.Title style={{ color: 'white', fontWeight: 'bold' }}>
                        Customer Order List
                        </ListItem.Title>
                    </ListItem.Content>
                    <ListItem.Chevron color="white" size = {40} onPress = { ActiveOrderPage }/>
                </ListItem>
                <ListItem
                    key                 = "Customer History Order"
                    Component           = { TouchableScale }
                    ViewComponent       = { LinearGradient }
                    friction            = { 90 }
                    tension             = { 100 }
                    activeScale         = { 0.95 }
                    style               = { { margin:16,marginTop:0,width:"90%" } }
                    containerStyle      = {{borderRadius:5}}
                    onPress             = { HistoryPage }
                    linearGradientProps = {{
                        colors : ['#035BA7', '#034F82'],
                        start  : { x: 1, y: 0 },
                        end    : { x: 0.2, y: 0 },
                    }}                        
                >
                    <Avatar source = { require('../assets/history.png' ) } />
                    <ListItem.Content>
                        <ListItem.Title style={{ color: 'white', fontWeight: 'bold' }}>
                        Customer Order History
                        </ListItem.Title>
                    </ListItem.Content>
                    <ListItem.Chevron color="white" size = {40} onPress = { HistoryPage }/>
                </ListItem>
                <ListItem
                    key                 = "Generate Report Today"
                    Component           = { TouchableScale }
                    ViewComponent       = { LinearGradient }
                    friction            = { 90 }
                    tension             = { 100 }
                    activeScale         = { 0.95 }
                    style               = { { margin:16,marginTop:0,width:"90%" } }
                    containerStyle      = {{borderRadius:5}}
                    onPress             = { printToFile }
                    linearGradientProps = {{
                        colors : ['#04ACB8', '#05727A'],
                        start  : { x: 1, y: 0 },
                        end    : { x: 0.2, y: 0 },
                    }}                        
                >
                    <Avatar source = { require('../assets/report.png' ) } />
                    <ListItem.Content>
                        <ListItem.Title style={{ color: 'white', fontWeight: 'bold' }}>
                            Generate Report Today
                        </ListItem.Title>
                    </ListItem.Content>
                    <ListItem.Chevron color="white" size = {40} onPress = { printToFile }/>
                </ListItem>
                <ListItem
                    key                 = "Log Out"
                    Component           = { TouchableScale }
                    ViewComponent       = { LinearGradient }
                    friction            = { 90 }
                    tension             = { 100 }
                    activeScale         = { 0.95 }
                    style               = { { margin:16,marginTop:0,width:"90%" } }
                    containerStyle      = {{borderRadius:5}}
                    onPress             = { dashboardPage }
                    linearGradientProps = {{
                        colors : ['#FB4123', '#B31F08'],
                        start  : { x: 1, y: 0 },
                        end    : { x: 0.2, y: 0 },
                    }}                        
                >
                    <Avatar source = { require('../assets/logout.png' ) } />
                    <ListItem.Content>
                        <ListItem.Title style={{ color: 'white', fontWeight: 'bold' }}>
                            Log Out
                        </ListItem.Title>
                    </ListItem.Content>
                    <ListItem.Chevron color="white" size = {40} onPress = { dashboardPage }/>
                </ListItem>
            </View>
            <Dialog isVisible = {openDialog} onBackdropPress = {()=>{setOpenDialog(false)}}  >
                
            </Dialog>
        </View>
        
    );
}